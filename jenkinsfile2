pipeline {
    agent {
        docker {
            image 'maven:3.9.3-eclipse-temurin-17'
            args '-v $HOME/.m2:/root/.m2'
        }
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "pranesh1998/java-maven-cicd:${env.BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps {
                script {
                    // Copy the Dockerfile into the workspace if it's not already there
                    sh 'cp /Dockerfile .'
                    
                    // Navigate to the correct directory before building the Docker image
                    sh 'docker build -t ${DOCKER_IMAGE} .'

                    // Using docker.image() to interact with the built Docker image
                    def dockerImage = docker.image("${DOCKER_IMAGE}")

                    // Push the Docker image to the registry
                    docker.withRegistry('https://index.docker.io/v1/', REGISTRY_CREDENTIALS) {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Run the Docker container on port 8081
                    sh 'docker run -d -p 8081:8080 ${DOCKER_IMAGE}'
                }
            }
        }
    }
}
